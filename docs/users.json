{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management API",
    "version": "1.0.0",
    "description": "API endpoints for managing users by administrators"
  },
  "paths": {
    "/api/users": {
      "get": {
        "summary": "List all users",
        "description": "Returns a list of all users except the currently authenticated user",
        "tags": ["Users"],
        "security": [
          {
            "sanctum": [],
            "permissions": ["edit-users"]
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized - Missing edit-users permission"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user with specified role",
        "tags": ["Users"],
        "security": [
          {
            "sanctum": [],
            "permissions": ["edit-users"]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors"
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "User ID"
        }
      ],
      "put": {
        "summary": "Update a user",
        "description": "Updates an existing user's details and role",
        "tags": ["Users"],
        "security": [
          {
            "sanctum": [],
            "permissions": ["edit-users"]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Cannot edit own user account"
          },
          "422": {
            "description": "Validation errors"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Deletes an existing user",
        "tags": ["Users"],
        "security": [
          {
            "sanctum": [],
            "permissions": ["edit-users"]
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "403": {
            "description": "Cannot delete own user account"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["board-member", "staff"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["name", "email", "password", "role"],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "role": {
            "type": "string",
            "enum": ["board-member", "staff"]
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "required": ["name", "email", "role"],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": ["board-member", "staff"]
          }
        }
      }
    },
    "securitySchemes": {
      "sanctum": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "permissions": {
        "type": "apiKey",
        "name": "X-Permission",
        "in": "header"
      }
    }
  }
}
